{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","buttons","id","display","style","gridArea","value","Button","props","_this","Object","_Users_johnmcneill_Developer_javascript_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_johnmcneill_Developer_javascript_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_johnmcneill_Developer_javascript_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleClick","bind","_Users_johnmcneill_Developer_javascript_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","e","target","getAttribute","updateState","react__WEBPACK_IMPORTED_MODULE_6___default","className","button","onClick","Component","_this2","state","input","output","answer","decimal","lastOp","tempStr","handleNumber","handleOperator","op","console","log","setState","newStr","substring","length","eval","_this3","butArr","map","key"],"mappings":"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","file":"static/js/main.85f93720.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\n\nlet buttons = [\n  { id: \"clear\", display: \"clear\", style: { gridArea: \"ac\" }, value: \"clear\" },\n  { id: \"divide\", display: \"/\", style: { gridArea: \"div\" }, value: \"divide\" },\n  {\n    id: \"multiply\",\n    display: \"*\",\n    style: { gridArea: \"mul\" },\n    value: \"multiply\"\n  },\n  { id: \"one\", display: \"1\", style: { gridArea: \"one\" }, value: 1 },\n  { id: \"two\", display: \"2\", style: { gridArea: \"two\" }, value: 2 },\n  { id: \"three\", display: \"3\", style: { gridArea: \"three\" }, value: 3 },\n  { id: \"four\", display: \"4\", style: { gridArea: \"four\" }, value: 4 },\n  { id: \"five\", display: \"5\", style: { gridArea: \"five\" }, value: 5 },\n  { id: \"six\", display: \"6\", style: { gridArea: \"six\" }, value: 6 },\n  { id: \"seven\", display: \"7\", style: { gridArea: \"seven\" }, value: 7 },\n  { id: \"eight\", display: \"8\", style: { gridArea: \"eight\" }, value: 8 },\n  { id: \"nine\", display: \"9\", style: { gridArea: \"nine\" }, value: 9 },\n  { id: \"add\", display: \"+\", style: { gridArea: \"plus\" }, value: \"plus\" },\n  {\n    id: \"subtract\",\n    display: \"-\",\n    style: { gridArea: \"minus\" },\n    value: \"minus\"\n  },\n  { id: \"decimal\", display: \".\", style: { gridArea: \"dot\" }, value: \".\" },\n  { id: \"equals\", display: \"=\", style: { gridArea: \"equ\" }, value: \"equals\" },\n  { id: \"zero\", display: \"0\", style: { gridArea: \"zero\" }, value: 0 }\n];\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    let value = e.target.getAttribute(\"value\");\n    this.props.updateState(value);\n  }\n  render() {\n    return (\n      <div\n        className=\"button\"\n        id={this.props.button.id}\n        style={this.props.button.style}\n        onClick={this.handleClick}\n        value={this.props.button.value}\n      >\n        {this.props.button.display}\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.updateState = this.updateState.bind(this);\n    this.state = {\n      input: \"0\",\n      output: \"0\",\n      answer: \"\",\n      decimal: false,\n      lastOp: false\n    };\n  }\n\n  updateState(input) {\n    let tempStr = this.state.input;\n\n    function handleNumber(tempStr, input) {\n      if (tempStr == \"0\" && input == \"0\") {\n        return tempStr;\n      } else if (tempStr == \"0\" && input == \".\") {\n        return tempStr + input;\n      } else if (tempStr == \"0\") {\n        return input;\n      } else {\n        return tempStr + input;\n      }\n    }\n    function handleOperator(tempStr, op) {\n      return tempStr + op;\n    }\n    console.log(\"input\", input);\n\n    switch (input) {\n      case \"0\": {\n        tempStr = handleNumber(tempStr, input);\n        this.setState({\n          lastOp: false\n        });\n        break;\n      }\n      case \"1\": {\n        tempStr = handleNumber(tempStr, input);\n        this.setState({\n          lastOp: false\n        });\n        break;\n      }\n      case \"2\": {\n        tempStr = handleNumber(tempStr, input);\n        this.setState({\n          lastOp: false\n        });\n        break;\n      }\n      case \"3\": {\n        tempStr = handleNumber(tempStr, input);\n        this.setState({\n          lastOp: false\n        });\n        break;\n      }\n      case \"4\": {\n        tempStr = handleNumber(tempStr, input);\n        this.setState({\n          lastOp: false\n        });\n        break;\n      }\n      case \"5\": {\n        tempStr = handleNumber(tempStr, input);\n        this.setState({\n          lastOp: false\n        });\n        break;\n      }\n      case \"6\": {\n        tempStr = handleNumber(tempStr, input);\n        this.setState({\n          lastOp: false\n        });\n        break;\n      }\n      case \"7\": {\n        tempStr = handleNumber(tempStr, input);\n        this.setState({\n          lastOp: false\n        });\n        break;\n      }\n      case \"8\": {\n        tempStr = handleNumber(tempStr, input);\n        this.setState({\n          lastOp: false\n        });\n        break;\n      }\n      case \"9\": {\n        tempStr = handleNumber(tempStr, input);\n        this.setState({\n          lastOp: false\n        });\n        break;\n      }\n      case \"multiply\": {\n        if (this.state.lastOp) {\n          let newStr = tempStr.substring(0, tempStr.length - 1);\n          tempStr = handleOperator(newStr, \"*\");\n          this.setState({\n            lastOp: true,\n            decimal: false\n          });\n          break;\n        } else {\n          this.setState({\n            lastOp: true,\n            decimal: false\n          });\n          tempStr = handleOperator(tempStr, \"*\");\n          break;\n        }\n      }\n      case \"divide\": {\n        if (this.state.lastOp) {\n          let newStr = tempStr.substring(0, tempStr.length - 1);\n          tempStr = handleOperator(newStr, \"/\");\n          this.setState({\n            lastOp: true,\n            decimal: false\n          });\n          break;\n        } else {\n          this.setState({\n            lastOp: true,\n            decimal: false\n          });\n          tempStr = handleOperator(tempStr, \"/\");\n          break;\n        }\n      }\n      case \"plus\": {\n        if (this.state.lastOp) {\n          let newStr = tempStr.substring(0, tempStr.length - 1);\n          tempStr = handleOperator(newStr, \"+\");\n          this.setState({\n            lastOp: true,\n            decimal: false\n          });\n          break;\n        } else {\n          this.setState({\n            lastOp: true,\n            decimal: false\n          });\n          tempStr = handleOperator(tempStr, \"+\");\n          break;\n        }\n      }\n      case \"minus\": {\n        if (this.state.lastOp) {\n          let newStr = tempStr.substring(0, tempStr.length - 1);\n          tempStr = handleOperator(newStr, \"-\");\n          this.setState({\n            lastOp: true,\n            decimal: false\n          });\n          break;\n        } else {\n          this.setState({\n            lastOp: true,\n            decimal: false\n          });\n          tempStr = handleOperator(tempStr, \"-\");\n          break;\n        }\n      }\n      case \"equals\": {\n        this.setState({\n          output: tempStr + \" = \" + eval(tempStr),\n          answer: eval(tempStr),\n          input: \"0\",\n          decimal: false\n        });\n        tempStr = eval(tempStr);\n        break;\n      }\n\n      case \".\": {\n        if (this.state.decimal) {\n          break;\n        } else {\n          tempStr += \".\";\n          this.setState({\n            decimal: true\n          });\n          break;\n        }\n      }\n\n      case \"clear\": {\n        tempStr = 0;\n        this.setState({\n          input: 0,\n          output: 0,\n          answer: \"\",\n          decimal: false\n        });\n        break;\n      }\n    }\n\n    this.setState({\n      input: tempStr\n    });\n  }\n  render() {\n    const butArr = buttons.map(button => {\n      return (\n        <Button\n          key={button.id}\n          updateState={this.updateState}\n          button={button}\n        />\n      );\n    });\n    return (\n      <div className=\"App\">\n        <div id=\"calculator\">\n          <div id=\"displays\">\n            <div id=\"output\">\n              <h3>{this.state.output}</h3>\n            </div>\n            <div id=\"display\">{this.state.input}</div>\n          </div>\n          <div id=\"buttons\">{butArr}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}